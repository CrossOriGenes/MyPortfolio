/* <button
        type="button"
        className="login-sc-btns"
        id="google-login-btn"
        onClick={googleLogin}
    >
        <i className="fa-brands fa-google-plus-g" />
        <span>Login with Google</span>
    </button>
    <button type="button" className="login-sc-btns" id="fb-login-btn">
        <i className="fa-brands fa-facebook-f" />
        <span>Login with Facebook</span>
    </button>
    <button
        type="button"
        className="login-sc-btns"
        id="github-login-btn"
    >
        <i className="fa-brands fa-github" />
        <span>Login with Github</span>
    </button> 
*/



const googleLogin = () => {
    window.open("http://localhost:8000/auth/google", "_self");
};

const onLoginSuccess = async () => {
    try {
      const response = await fetch("http://localhost:8000/auth/googleLogin", {
        method: "GET",
        credentials: "include",
        headers: {
          Accept: "application/json",
          "Content-type": "application/json",
          "Access-Control-Allow-Credentials": true,
        },
      });

      const result = await response.json();
      console.log(7, result);

      if (response.ok) {
        if (!authCtx.token) {
          authCtx.login(result.token);
          toast.success(result.msg);
        }
      } else if (response.status === 500) {
        toast.error(result.msg);
      } else {
        toast.error(result.errors);
      }
    } catch (err) {
      console.log(err);
    }
};



function loadScript(src) {
  return new Promise((resolve) => {
    const script = document.createElement('script')
    script.src = src
    script.onload = () => {
      resolve(true)
    }
    script.onerror = () => {
      resolve(false)
    }
    document.body.appendChild(script)
  })
}

async function displayRazorpay () {

    const res = await loadScript('https://checkout.razorpay.com/v1/checkout.js')

      if (!res){
        alert('Razropay failed to load!!')
        return 
      }

      const data = await fetch('http://localhost:1769/razorpay', {method: 'POST'}).then((t) => 
        t.json()
      ) 

      console.log(data)

    const options = {
      "key": "YOUR_KEY_ID", // Enter the Key ID generated from the Dashboard
      "amount": "50000", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
      "currency": "INR",
      "name": "Acme Corp",
      "description": "Test Transaction",
      "image": "https://example.com/your_logo",
      "order_id": "order_IluGWxBm9U8zJ8", //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
      "callback_url":"http://localhost:1769/verify",
      "notes": {
          "address": "Razorpay Corporate Office"
      },
      "theme": {
          "color": "#3399cc"
      }
  };
  const paymentObject = new window.Razorpay(options); 
  paymentObject.open();
  }





const initPayment = (data) => {
		const options = {
			key: process.evn.REACT_APP_RAZORPAY_KEY,
			amount: data.amount,
			currency: data.currency,
			name: book.name,
			description: "Test Transaction",
			image: book.img,
			order_id: data.id,
			handler: async (response) => {
				try {
					const verifyUrl = "http://localhost:8080/api/payment/verify";
					const { data } = await axios.post(verifyUrl, response);
					console.log(data);
				} catch (error) {
					console.log(error);
				}
			},
			theme: {
				color: "#3399cc",
			},
		};
		const rzp1 = new window.Razorpay(options);
		rzp1.open();
	};

	const handlePayment = async () => {
		try {
			const orderUrl = "http://localhost:8080/api/payment/orders";
			const { data } = await axios.post(orderUrl, { amount: book.price });
			console.log(data);
			initPayment(data.data);
		} catch (error) {
			console.log(error);
		}
	};